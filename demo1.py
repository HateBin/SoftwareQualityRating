def _get_list_config() -> None:
    """
    获取并存储当前列表视图的字段展示配置信息

    本方法通过TAPD官方API接口，获取缺陷列表和需求子任务列表的当前字段配置，
    并将配置信息转换为分号分隔的字符串格式存储到类属性中，供后续配置比对使用

    流程说明:
        1. 获取缺陷列表视图的字段展示配置
        2. 获取需求子任务列表的字段展示配置
        3. 将列表格式的配置转换为标准化的字符串格式
        4. 存储配置信息到类属性供后续使用

    异常:
        KeyError: 当接口返回数据缺少关键字段时抛出
        requests.RequestException: 当API请求失败时抛出

    关联方法:
        get_query_filtering_list_config(): 获取缺陷列表视图配置
        get_requirement_list_config(): 获取需求子任务列表配置
    """
    # ==================================================================
    # 阶段1：获取缺陷列表视图配置
    # ==================================================================
    # 调用API接口获取缺陷列表展示字段配置，返回字段标识符列表
    # 示例返回数据：['id', 'title', 'status', 'platform']
    bug_list_configs = get_query_filtering_list_config()

    # ==================================================================
    # 阶段2：获取子任务列表视图配置
    # ==================================================================
    # 调用API接口获取需求子任务列表展示字段配置，返回字段标识符列表
    # 示例返回数据：['owner', 'due', 'status']
    sub_task_list_configs = get_requirement_list_config()

    # ==================================================================
    # 阶段3：数据格式转换
    # ==================================================================
    # 将列表转换为分号分隔的字符串格式，用于后续配置比对
    # 示例结果转换：['id','title'] → "id;title"
    self.oldBugListConfigs = ';'.join(bug_list_configs)  # 缺陷列表字段配置字符串
    self.oldSubTaskListConfigs = ';'.join(sub_task_list_configs)  # 子任务列表字段配置字符串