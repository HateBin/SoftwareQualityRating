import re
from datetime import datetime


def date_time_to_date(date_time_str: str) -> str:
    """
    将多种日期时间格式统一转换为标准日期字符串

    功能增强：
    1. 支持多种输入格式
    2. 增强容错处理
    3. 完善类型提示
    4. 优化性能
    5. 添加详细文档

    参数:
        date_time_str (str): 日期时间字符串，支持格式：
            - 带时分秒：'2024-10-12 20:52:30'
            - 带时分：'2024-10-12 20:52'
            - 短横线分隔：'2024-10-12'
            - 无分隔符：'20241012'
            - 中文日期：'2024年10月12日'

    返回:
        str: 标准化日期字符串'YYYY-MM-DD'

    异常:
        ValueError: 当输入无法解析为有效日期时抛出
        TypeError: 当输入不是字符串类型时抛出
    """
    # ======================================================================
    # 输入验证阶段
    # ======================================================================
    if not isinstance(date_time_str, str):
        raise TypeError(f"输入必须为字符串类型，当前类型：{type(date_time_str).__name__}")

    # ======================================================================
    # 预处理阶段
    # ======================================================================
    # 统一全角字符为半角
    normalized_str = date_time_str.translate(
        str.maketrans('０１２３４５６７８９', '0123456789')
    ).strip()

    # ======================================================================
    # 格式匹配阶段（按处理优先级排序）
    # ======================================================================
    format_patterns = [
        # 带时间部分格式
        (r'\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}', '%Y-%m-%d %H:%M'),  # 2024-10-12 20:52
        (r'\d{4}-\d{1,2}-\d{1,2} \d{1,2}:\d{1,2}:\d{1,2}', '%Y-%m-%d %H:%M:%S'),  # 2024-10-12 20:52:54
        # 纯日期格式
        (r'\d{4}年\d{1,2}月\d{1,2}日', '%Y年%m月%d日'),  # 中文格式
        (r'\d{4}/\d{1,2}/\d{1,2}', '%Y/%m/%d'),  # 斜杠格式
        (r'\d{4}-\d{1,2}-\d{1,2}', '%Y-%m-%d'),  # 标准短横线格式
        (r'\d{8}', '%Y%m%d'),  # 紧凑格式
    ]

    # ======================================================================
    # 解析阶段
    # ======================================================================
    for pattern, date_format in format_patterns:
        try:
            # 使用正则预过滤提高效率
            if re.fullmatch(pattern, normalized_str):
                dt_obj = datetime.strptime(normalized_str, date_format)
                return dt_obj.strftime('%Y-%m-%d')
        except ValueError:
            continue

    # ======================================================================
    # 异常处理阶段
    # ======================================================================
    raise ValueError(f"无法解析日期字符串：{date_time_str} (支持格式：YYYY-MM-DD[ HH:MM]、YYYY年MM月DD日等)")

if __name__ == '__main__':
    print(date_time_to_date("2024-10-12 20:52:53"))