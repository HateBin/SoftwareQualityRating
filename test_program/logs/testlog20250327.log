2025-03-27 10:56:36,194 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 10:56:36,195 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 10:56:36,195 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 10:56:36,195 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 10:56:36,195 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 10:56:36,196 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 10:56:36,196 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 10:56:36,196 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 10:56:36,196 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 10:56:36,197 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 10:56:36,197 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 10:56:36,197 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 10:56:36,197 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 10:56:36,197 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 10:56:36,197 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 10:56:36,198 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 10:56:36,198 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 10:56:36,198 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 10:56:36,198 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 10:56:36,199 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 10:56:36,199 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 10:56:36,199 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 10:56:36,199 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 10:56:36,199 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 10:56:36,199 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 10:56:36,200 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 10:56:36,200 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 10:56:36,200 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 10:56:36,200 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 10:56:36,201 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 10:56:36,201 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 10:56:36,201 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 10:56:36,201 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 10:56:36,202 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 10:56:36,202 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 10:56:36,202 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 10:56:36,202 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 10:56:36,203 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - 开始执行用例：BUG密度为0.999999999999999999999999999999999999999999999999999999999999999999999999999999999，期望20分
2025-03-27 10:56:36,203 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - 执行用例：BUG密度为0.999999999999999999999999999999999999999999999999999999999999999999999999999999999，期望20分 成功
2025-03-27 10:56:36,203 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 10:56:36,203 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 10:56:36,204 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 10:56:36,204 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 10:56:36,204 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 10:56:36,204 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 10:56:36,204 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 10:56:36,204 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 10:56:36,205 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 10:56:36,205 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 10:56:36,206 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 10:56:36,206 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 10:56:36,206 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 10:56:36,207 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 10:56:36,207 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 10:56:36,207 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 10:56:36,207 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:24] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 10:56:36,207 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:39] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 10:56:36,208 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 13:31:47,037 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 13:31:47,071 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 13:32:29,443 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 13:32:29,443 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 13:32:29,443 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 13:32:29,444 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 13:32:29,444 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 13:32:29,444 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 13:54:29,349 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 13:54:29,350 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 13:54:29,350 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 13:54:29,350 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 13:54:29,350 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 13:54:29,350 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 13:54:29,351 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 13:54:29,351 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 13:54:29,351 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 13:54:29,351 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 13:54:29,351 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 13:54:29,352 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 13:54:29,352 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 13:54:29,352 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 13:54:29,352 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 13:54:29,352 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 13:54:29,352 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 13:54:29,353 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 13:54:29,353 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 13:54:29,353 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 13:54:29,353 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 13:54:29,354 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 13:54:29,354 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 13:54:29,354 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 13:54:29,354 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 13:54:29,354 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 13:54:29,354 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 13:54:29,355 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 13:54:29,355 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 13:54:29,356 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 13:54:29,356 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 13:54:29,356 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 13:54:29,356 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 13:54:29,357 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 13:54:29,357 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 13:54:29,357 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 13:54:29,357 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 13:54:29,358 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 13:54:29,358 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 13:54:29,358 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 13:54:29,358 ERROR [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:38] - 执行用例：BUG密度为-1，输入值不在任何评分区间内 失败，失败原因：错误：输入值不在任何评分区间内
2025-03-27 13:54:29,410 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 13:56:17,822 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 13:56:17,823 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 13:56:17,823 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 13:56:17,823 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 13:56:17,823 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 13:56:17,824 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 13:56:17,824 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 13:56:17,824 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 13:56:17,824 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 13:56:17,824 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 13:56:17,824 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 13:56:17,825 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 13:56:17,825 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 13:56:17,825 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 13:56:17,825 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 13:56:17,826 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 13:56:17,826 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 13:56:17,826 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 13:56:17,826 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 13:56:17,827 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 13:56:17,827 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 13:56:17,827 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 13:56:17,827 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 13:56:17,828 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 13:56:17,828 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 13:56:17,828 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 13:56:17,828 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 13:56:17,828 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 13:56:17,829 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 13:56:17,829 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 13:56:17,829 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 13:56:17,829 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 13:56:17,829 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 13:56:17,830 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 13:56:17,830 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 13:56:17,830 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 13:56:17,830 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 13:56:17,831 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 13:56:17,831 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 13:56:17,831 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 13:56:17,831 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 13:56:17,832 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:14:06,413 INFO [testlog] [base_case.py (setup_class:12] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:14:06,413 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:14:06,413 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:14:06,414 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:14:06,414 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:14:06,414 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:14:06,414 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:14:06,415 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:14:06,415 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:14:06,415 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:14:06,415 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:14:06,416 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:14:06,416 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:14:06,416 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:14:06,416 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:14:06,417 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:14:06,417 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:14:06,417 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:14:06,417 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:14:06,418 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:14:06,418 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:14:06,418 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:14:06,418 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:14:06,419 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:14:06,419 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:14:06,419 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:14:06,419 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:14:06,420 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:14:06,420 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:14:06,420 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:14:06,420 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:14:06,421 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:14:06,421 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:14:06,421 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:14:06,421 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:14:06,421 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:14:06,421 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:14:06,422 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:14:06,422 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:14:06,422 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:14:06,422 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:14:06,423 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:14:06,423 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:14:06,423 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:14:06,423 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:14:06,424 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:14:06,424 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:14:06,424 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:14:06,424 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:14:06,425 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:14:06,425 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:14:06,425 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:14:06,425 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:14:06,425 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:14:06,425 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:14:06,426 INFO [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:25] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:14:06,426 DEBUG [testlog] [test_calculate_bug_count_rating.py (test_calculate_bug_count_rating:40] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:14:06,426 INFO [testlog] [base_case.py (teardown_class:16] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:24:57,909 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:24:57,910 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:24:57,910 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:24:57,910 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:24:57,910 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:24:57,911 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:24:57,911 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:24:57,911 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:24:57,911 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:24:57,912 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:24:57,912 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:24:57,912 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:24:57,912 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:24:57,912 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:24:57,912 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:24:57,913 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:24:57,913 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:24:57,913 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:24:57,913 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:24:57,914 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:24:57,914 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:24:57,914 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:24:57,914 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:24:57,914 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:24:57,914 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:24:57,915 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:24:57,915 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:24:57,916 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:24:57,916 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:24:57,916 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:24:57,916 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:24:57,917 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:24:57,917 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:24:57,917 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:24:57,917 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:24:57,918 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:24:57,918 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:24:57,918 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:24:57,918 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:24:57,919 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:24:57,919 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:24:57,919 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:24:57,919 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:24:57,920 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:24:57,920 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:24:57,920 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:24:57,920 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:24:57,920 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:24:57,921 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:24:57,921 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:24:57,921 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:24:57,921 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:24:57,922 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:24:57,922 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:24:57,922 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:24:57,922 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:24:57,922 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:24:57,923 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:26:22,988 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:26:22,988 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:26:22,988 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:26:22,989 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:26:22,989 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:26:22,989 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:26:22,989 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:26:22,990 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:26:22,990 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:26:22,990 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:26:22,990 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:26:22,990 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:26:22,990 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:26:22,991 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:26:22,991 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:26:22,991 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:26:22,991 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:26:22,991 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:26:22,991 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:26:22,992 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:26:22,992 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:26:22,992 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:26:22,992 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:26:22,993 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:26:22,993 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:26:22,993 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:26:22,993 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:26:22,994 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:26:22,994 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:26:22,994 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:26:22,994 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:26:22,995 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:26:22,995 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:26:22,995 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:26:22,995 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:26:22,996 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:26:22,996 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:26:22,996 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:26:22,996 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:26:22,996 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:26:22,997 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:26:22,997 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:26:22,997 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:22,997 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:26:22,998 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:22,998 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:26:22,998 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:26:22,998 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:26:22,998 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:22,999 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:26:22,999 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:26:22,999 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:26:22,999 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:26:23,000 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:26:23,000 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:26:23,000 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:26:23,000 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:26:23,000 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:26:32,468 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:26:32,469 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:26:32,469 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:26:32,469 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:26:32,469 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:26:32,469 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:26:32,469 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:26:32,470 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:26:32,470 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:26:32,470 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:26:32,470 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:26:32,470 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:26:32,470 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:26:32,470 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:26:32,470 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:26:32,470 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:26:32,471 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:26:32,471 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:26:32,471 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:26:32,471 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:26:32,471 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:26:32,471 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:26:32,471 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:26:32,471 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:26:32,471 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:26:32,472 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:26:32,472 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:26:32,472 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:26:32,472 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:26:32,472 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:26:32,472 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:26:32,472 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:26:32,472 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:26:32,473 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:26:32,473 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:26:32,473 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:26:32,473 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:26:32,473 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:26:32,473 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:26:32,473 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:26:32,473 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:26:32,474 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:26:32,474 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:32,474 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:26:32,474 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:32,474 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:26:32,474 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:26:32,474 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:26:32,474 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:26:32,474 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:26:32,474 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:26:32,475 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:26:32,475 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:26:32,475 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:26:32,475 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:26:32,475 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:26:32,475 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:26:32,475 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:27:12,504 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:27:12,504 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:27:12,504 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:27:12,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:27:12,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:27:12,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:27:12,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:27:12,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:27:12,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:27:12,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:27:12,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:27:12,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:27:12,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:27:12,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:27:12,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:27:12,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:27:12,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:27:12,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:27:12,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:27:12,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:27:12,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:27:12,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:27:12,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:27:12,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:27:12,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:27:12,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:27:12,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:27:12,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:27:12,508 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:27:12,508 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:27:12,508 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:27:12,508 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:27:12,508 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:27:12,508 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:27:12,508 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:27:12,508 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:27:12,508 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:27:12,509 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:27:12,509 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:27:12,509 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:27:12,509 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:27:12,509 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:27:12,509 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:27:12,509 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:27:12,509 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:27:12,509 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:27:12,509 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:27:12,510 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:27:12,510 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:27:12,510 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:27:12,510 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:27:12,510 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:27:12,510 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:27:12,510 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:27:12,510 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:27:12,511 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:27:12,511 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:27:12,511 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:28:52,195 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:28:52,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:28:52,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:28:52,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:28:52,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:28:52,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:28:52,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:28:52,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:28:52,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:28:52,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:28:52,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:28:52,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:28:52,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:28:52,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:28:52,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:28:52,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:28:52,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:28:52,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:28:52,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:28:52,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:28:52,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:28:52,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:28:52,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:28:52,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:28:52,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:28:52,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:28:52,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:28:52,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:28:52,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:28:52,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:28:52,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:28:52,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:28:52,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:28:52,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:28:52,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:28:52,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:28:52,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:28:52,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:28:52,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:28:52,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:28:52,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:28:52,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:28:52,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:28:52,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:28:52,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:28:52,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:28:52,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:28:52,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:28:52,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:28:52,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:28:52,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:28:52,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:28:52,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:28:52,202 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:28:52,202 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:28:52,202 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:28:52,202 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:28:52,202 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:29:05,274 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:29:05,274 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:29:05,274 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:29:05,274 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:29:05,279 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:29:05,279 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:29:05,279 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:29:05,279 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:29:05,283 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:29:05,284 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:29:05,287 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:29:05,287 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:29:05,287 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:29:05,288 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:29:05,288 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:29:05,288 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:29:05,288 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:29:05,288 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:29:05,288 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:29:05,288 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:29:05,288 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:29:05,288 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:29:05,289 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:29:05,289 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:29:05,289 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:29:05,289 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:29:05,289 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:29:05,289 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:29:05,289 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:29:05,289 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:29:05,289 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:29:05,290 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:29:05,290 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:29:05,290 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:29:05,290 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:29:05,290 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:29:05,290 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:29:05,290 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:29:05,290 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:29:05,291 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:29:05,291 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:29:05,291 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:29:05,291 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:29:05,291 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:29:05,291 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:29:05,291 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:29:05,291 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:29:05,292 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:29:05,292 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:29:05,292 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:29:05,292 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:29:05,292 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:29:05,292 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:29:05,292 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:29:05,292 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:29:05,292 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:29:05,292 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:29:05,293 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:30:04,346 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:30:04,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:30:04,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:30:04,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:30:04,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:30:04,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:30:04,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:30:04,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:30:04,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:30:04,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:30:04,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:30:04,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:30:04,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:30:04,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:30:04,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:30:04,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:30:04,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:30:04,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:30:04,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:30:04,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:30:04,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:30:04,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:30:04,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:30:04,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:30:04,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:30:04,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:30:04,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:30:04,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:30:04,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:30:04,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:30:04,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:30:04,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:30:04,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:30:04,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:30:04,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:30:04,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:30:04,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:30:04,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:30:04,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:30:04,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:30:04,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:30:04,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:30:04,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:04,352 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:30:04,352 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:04,352 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:30:04,352 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:30:04,352 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:30:04,352 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:04,352 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:30:04,352 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:30:04,353 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:30:04,353 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:30:04,353 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:30:04,353 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:30:04,353 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:30:04,353 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:30:04,353 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:30:11,883 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:30:11,884 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:30:11,884 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:30:11,884 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:30:11,884 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:30:11,884 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:30:11,884 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:30:11,884 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:30:11,884 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:30:11,885 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:30:11,885 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:30:11,885 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:30:11,885 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:30:11,885 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:30:11,885 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:30:11,885 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:30:11,885 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:30:11,886 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:30:11,886 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:30:11,886 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:30:11,886 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:30:11,886 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:30:11,886 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:30:11,886 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:30:11,886 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:30:11,887 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:30:11,887 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:30:11,887 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:30:11,887 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:30:11,887 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:30:11,887 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:30:11,887 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:30:11,887 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:30:11,887 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:30:11,888 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:30:11,888 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:30:11,888 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:30:11,888 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:30:11,888 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:30:11,888 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:30:11,888 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:30:11,888 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:30:11,889 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:11,889 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:30:11,889 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:11,889 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:30:11,889 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:30:11,889 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:30:11,889 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:30:11,889 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:30:11,889 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:30:11,890 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:30:11,890 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:30:11,890 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:30:11,890 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:30:11,890 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:30:11,890 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:30:11,890 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 14:35:17,006 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 14:35:17,006 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 14:35:17,006 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 14:35:17,007 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 14:35:17,007 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 14:35:17,007 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 14:35:17,007 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 14:35:17,007 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 14:35:17,007 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 14:35:17,008 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 14:35:17,008 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 14:35:17,008 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 14:35:17,008 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 14:35:17,008 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 14:35:17,008 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 14:35:17,008 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 14:35:17,008 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 14:35:17,008 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 14:35:17,008 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 14:35:17,009 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 14:35:17,009 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 14:35:17,009 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 14:35:17,009 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 14:35:17,009 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 14:35:17,009 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 14:35:17,009 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 14:35:17,009 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 14:35:17,010 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 14:35:17,010 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 14:35:17,010 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 14:35:17,010 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 14:35:17,010 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 14:35:17,010 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 14:35:17,010 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 14:35:17,010 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 14:35:17,010 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 14:35:17,010 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 14:35:17,011 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 14:35:17,011 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 14:35:17,011 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 14:35:17,011 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 14:35:17,011 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 14:35:17,011 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:35:17,011 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 14:35:17,011 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 14:35:17,012 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 14:35:17,012 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 14:35:17,012 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 14:35:17,012 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 14:35:17,012 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 14:35:17,012 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 14:35:17,012 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 14:35:17,012 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 14:35:17,012 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 14:35:17,012 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 14:35:17,013 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 14:35:17,013 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 14:35:17,013 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:24:29,585 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:24:29,585 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:24:29,585 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数0，期望20分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,618 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:24:29,618 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数1，期望15分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,620 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:24:29,620 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数2，期望10分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,621 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:24:29,621 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数3，期望5分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,622 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:24:29,623 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数4，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,624 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:24:29,624 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数5，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,625 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:24:29,625 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数9999，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,626 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:24:29,626 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数很长，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,627 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:24:29,627 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数-1 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,628 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:24:29,628 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为浮点数 失败，失败原因：
2025-03-27 15:24:29,629 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:24:29,629 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为小写英文 失败，失败原因：
2025-03-27 15:24:29,631 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:24:29,631 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为大写英文 失败，失败原因：
2025-03-27 15:24:29,632 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:24:29,632 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为汉字 失败，失败原因：
2025-03-27 15:24:29,633 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:24:29,633 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为特殊符号 失败，失败原因：
2025-03-27 15:24:29,634 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:24:29,634 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为空格 失败，失败原因：
2025-03-27 15:24:29,635 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:24:29,635 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为空字符串 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,636 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:24:29,636 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为null 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:24:29,638 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:24:29,638 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传BUG重启数 失败，失败原因：错误：X的值必须为整数
2025-03-27 15:24:29,656 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:25:25,834 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:25:25,834 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:25:25,835 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数0，期望20分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,870 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:25:25,870 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数1，期望15分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,872 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:25:25,872 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数2，期望10分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,874 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:25:25,874 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数3，期望5分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,875 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:25:25,875 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数4，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,877 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:25:25,877 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数5，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,878 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:25:25,878 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数9999，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,881 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:25:25,881 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数很长，期望1分 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,883 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:25:25,883 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数-1 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,885 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:25:25,885 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为浮点数 失败，失败原因：
2025-03-27 15:25:25,886 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:25:25,886 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为小写英文 失败，失败原因：
2025-03-27 15:25:25,888 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:25:25,888 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为大写英文 失败，失败原因：
2025-03-27 15:25:25,890 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:25:25,890 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为汉字 失败，失败原因：
2025-03-27 15:25:25,892 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:25:25,892 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为特殊符号 失败，失败原因：
2025-03-27 15:25:25,894 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:25:25,894 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为空格 失败，失败原因：
2025-03-27 15:25:25,896 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:25:25,896 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为空字符串 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,898 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:25:25,899 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG重启数为null 失败，失败原因：calculate_bug_reopen_rating() got multiple values for argument 'X'
2025-03-27 15:25:25,901 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:25:25,901 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传BUG重启数 失败，失败原因：错误：X的值必须为整数
2025-03-27 15:25:25,920 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:27:33,508 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:27:33,508 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:27:33,508 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,541 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:27:33,541 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,543 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:27:33,543 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.9，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,545 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:27:33,545 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,546 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:27:33,546 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.1，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,547 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:27:33,547 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.2，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,548 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:27:33,548 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.4，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,549 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:27:33,549 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.5，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,550 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:27:33,550 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.6，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,551 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:27:33,552 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.7，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,553 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:27:33,553 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.9，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,554 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:27:33,554 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,555 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:27:33,555 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.1，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,556 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:27:33,556 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.2，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,557 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:27:33,557 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.9，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,558 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:27:33,558 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,559 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:27:33,559 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3.1，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,560 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:27:33,561 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为999，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,562 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:27:33,562 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为很多小数点 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,563 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:27:33,563 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为-1，输入值不在任何评分区间内 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,564 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:27:33,564 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为小写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:27:33,565 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:27:33,565 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为大写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:27:33,566 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:27:33,566 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为汉字，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:27:33,567 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:27:33,567 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:27:33,568 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:27:33,568 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为空字符串，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,569 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:27:33,570 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:27:33,571 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:27:33,571 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为null，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:27:33,572 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:27:33,572 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传值，输入参数X不能为空 失败，失败原因：错误：输入参数X必须是数字类型
2025-03-27 15:27:33,590 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:28:18,888 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:28:19,217 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:28:19,217 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:28:19,218 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:28:19,218 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:28:19,218 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:28:19,218 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:28:19,219 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:28:19,219 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:28:19,219 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:28:19,219 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:28:19,219 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:28:19,219 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:28:19,219 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:28:19,219 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:28:19,220 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:28:19,220 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:28:19,220 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:28:19,220 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:28:19,220 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:28:19,220 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:28:19,220 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:28:19,220 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:28:19,221 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:28:19,221 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:28:19,221 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:28:19,221 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:28:19,221 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:28:19,221 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:28:19,221 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:28:19,221 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:28:19,221 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:28:19,222 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:28:19,222 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:28:19,222 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:28:19,222 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:28:19,222 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:28:19,222 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:28:19,222 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:28:19,223 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:28:19,223 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:28:19,223 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:28:19,223 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:28:19,223 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:28:19,223 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:28:19,223 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:28:19,223 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:28:19,224 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:28:19,224 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:28:19,224 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:28:19,224 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:28:19,224 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:28:19,224 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:28:19,224 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:28:19,224 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:28:19,224 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:28:19,225 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:28:19,225 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:29:46,059 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:29:46,059 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:29:46,059 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,092 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:29:46,092 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,094 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:29:46,094 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.9，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,096 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:29:46,096 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,097 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:29:46,097 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.1，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,098 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:29:46,098 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.2，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,099 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:29:46,099 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.4，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,100 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:29:46,100 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.5，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,101 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:29:46,101 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.6，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,102 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:29:46,102 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.7，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,103 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:29:46,104 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.9，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,105 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:29:46,105 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,106 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:29:46,106 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.1，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,107 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:29:46,107 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.2，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,108 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:29:46,108 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.9，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,109 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:29:46,109 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,110 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:29:46,110 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3.1，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,112 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:29:46,112 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为999，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,113 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:29:46,113 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为很多小数点 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,114 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:29:46,114 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为-1，输入值不在任何评分区间内 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,115 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:29:46,115 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为小写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:29:46,116 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:29:46,116 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为大写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:29:46,117 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:29:46,117 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为汉字，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:29:46,119 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:29:46,119 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:29:46,120 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:29:46,120 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为空字符串，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,121 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:29:46,121 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:29:46,122 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:29:46,122 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为null，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:29:46,123 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:29:46,123 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传值，输入参数X不能为空 失败，失败原因：错误：输入参数X必须是数字类型
2025-03-27 15:29:46,143 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:30:12,348 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:30:12,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:30:12,348 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,384 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:30:12,384 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,386 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:30:12,386 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.9，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,387 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:30:12,387 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,389 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:30:12,389 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.1，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,392 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:30:12,392 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.2，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,394 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:30:12,394 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.4，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,396 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:30:12,396 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.5，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,398 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:30:12,398 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.6，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,401 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:30:12,401 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.7，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,403 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:30:12,403 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.9，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,405 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:30:12,405 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,407 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:30:12,407 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.1，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,409 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:30:12,409 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.2，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,411 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:30:12,411 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.9，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,413 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:30:12,413 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,415 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:30:12,415 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3.1，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,417 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:30:12,417 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为999，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,419 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:30:12,419 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为很多小数点 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,421 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:30:12,421 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为-1，输入值不在任何评分区间内 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,422 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:30:12,422 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为小写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:30:12,424 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:30:12,424 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为大写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:30:12,426 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:30:12,426 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为汉字，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:30:12,428 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:30:12,428 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:30:12,430 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:30:12,430 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为空字符串，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,432 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:30:12,432 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:30:12,433 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:30:12,433 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为null，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:30:12,435 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:30:12,435 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传值，输入参数X不能为空 失败，失败原因：错误：输入参数X必须是数字类型
2025-03-27 15:30:12,455 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:30:12,455 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:30:12,455 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:30:12,455 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:30:12,456 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:30:12,456 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:30:12,456 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:30:12,456 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:30:12,457 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:30:12,457 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:30:12,457 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:30:12,457 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:30:12,458 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:30:12,458 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:30:12,458 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:30:12,459 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:30:12,459 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:30:12,459 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:30:12,460 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:30:12,460 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:30:12,460 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:30:12,460 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:30:12,461 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:30:12,461 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:30:12,461 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:30:12,461 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:30:12,462 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:30:12,462 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:30:12,462 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:30:12,462 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:30:12,463 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:30:12,463 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:30:12,463 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:30:12,463 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:30:12,464 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:30:12,464 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:30:12,464 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:30:12,464 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:30:12,464 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:30:28,424 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:30:28,486 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:30:28,486 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:30:28,487 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:30:28,487 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:30:28,487 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:30:28,487 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:30:28,488 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:30:28,488 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:30:28,488 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:30:28,488 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:30:28,489 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:30:28,489 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:30:28,489 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:30:28,489 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:30:28,490 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:30:28,490 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:30:28,490 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:30:28,490 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:30:28,491 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:30:28,491 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:30:28,491 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:30:28,491 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:30:28,492 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:30:28,492 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:30:28,492 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:30:28,492 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:30:28,493 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:30:28,493 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:30:28,493 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:30:28,493 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:30:28,494 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:30:28,494 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:30:28,494 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:30:28,494 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:30:28,495 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:30:28,495 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:30:28,495 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:30:28,495 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:30:28,496 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:34:51,880 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:34:51,880 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:34:51,880 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,915 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:34:51,915 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,917 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:34:51,917 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为0.9，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,918 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:34:51,918 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1，期望20分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,919 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:34:51,919 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.1，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,920 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:34:51,921 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.2，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,922 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:34:51,922 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.4，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,923 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:34:51,923 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.5，期望15分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,924 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:34:51,924 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.6，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,925 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:34:51,925 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.7，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,926 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:34:51,926 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为1.9，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,928 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:34:51,928 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2，期望10分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,929 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:34:51,929 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.1，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,930 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:34:51,930 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.2，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,931 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:34:51,931 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为2.9，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,933 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:34:51,933 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3，期望5分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,934 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:34:51,934 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为3.1，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,935 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:34:51,935 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为999，期望1分 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,936 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:34:51,936 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为很多小数点 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,937 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:34:51,937 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为-1，输入值不在任何评分区间内 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,938 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:34:51,938 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为小写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:34:51,940 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:34:51,940 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为大写英文，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:34:51,941 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:34:51,941 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为汉字，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:34:51,942 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:34:51,942 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:34:51,943 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:34:51,943 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为空字符串，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,944 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:34:51,944 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 失败，失败原因：
2025-03-27 15:34:51,945 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:34:51,945 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：BUG密度为null，输入参数X不能为空 失败，失败原因：calculate_bug_count_rating() got multiple values for argument 'X'
2025-03-27 15:34:51,946 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:34:51,946 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不传值，输入参数X不能为空 失败，失败原因：错误：输入参数X必须是数字类型
2025-03-27 15:34:51,967 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:37:02,333 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:37:02,619 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:37:02,619 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:37:02,620 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:37:02,620 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:37:02,621 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:37:02,621 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:37:02,621 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:37:02,621 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:37:02,622 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:37:02,622 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:37:02,622 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:37:02,622 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:37:02,623 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:37:02,623 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:37:02,623 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:37:02,623 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:37:02,624 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:37:02,624 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:37:02,624 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:37:02,624 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:37:02,624 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:37:02,624 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:37:02,625 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:37:02,625 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:37:02,625 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:37:02,625 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:37:02,626 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:37:02,626 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:37:02,626 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:37:02,626 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:37:02,627 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:37:02,627 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:37:02,627 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:37:02,627 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:37:02,628 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:37:02,628 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:37:02,628 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:37:02,628 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:37:02,629 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:37:02,629 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:37:02,630 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:37:02,630 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:02,630 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:37:02,630 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:02,631 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:37:02,631 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:37:02,631 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:37:02,631 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:02,631 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:37:02,632 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:37:02,632 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:37:02,632 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:37:02,632 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:37:02,632 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:37:02,633 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:37:02,633 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:37:02,634 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:37:02,634 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:37:02,634 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:37:02,634 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:37:02,635 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:37:02,635 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:37:02,635 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:37:02,635 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:37:02,636 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:37:02,636 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:37:02,636 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:37:02,636 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:37:02,637 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:37:02,637 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:37:02,637 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:37:02,637 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:37:02,638 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:37:02,638 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:37:02,638 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:37:02,638 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:37:02,639 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:37:02,639 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:37:02,639 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:37:02,639 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:37:02,640 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:37:02,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:37:02,640 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:37:02,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:37:02,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:37:02,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:37:02,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:37:02,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:37:02,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:37:02,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:37:02,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:37:02,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:37:02,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:37:02,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:37:02,643 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:37:14,854 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:37:15,184 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:37:15,184 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:37:15,184 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:37:15,184 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:37:15,184 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:37:15,184 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:37:15,185 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:37:15,185 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:37:15,185 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:37:15,185 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:37:15,185 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:37:15,185 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:37:15,185 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:37:15,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:37:15,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:37:15,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:37:15,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:37:15,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:37:15,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:37:15,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:37:15,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:37:15,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:37:15,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:37:15,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:37:15,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:37:15,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:37:15,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:37:15,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:37:15,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:37:15,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:37:15,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:37:15,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:37:15,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:37:15,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:37:15,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:37:15,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:37:15,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:37:15,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:37:15,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:37:15,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:37:15,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:37:15,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:15,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:37:15,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:15,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:37:15,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:37:15,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:37:15,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:37:15,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:37:15,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:37:15,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:37:15,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:37:15,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:37:15,191 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:37:15,191 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:37:15,191 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:37:15,191 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:37:26,305 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:37:26,639 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:37:26,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:37:26,640 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:37:26,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:37:26,640 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:37:26,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:37:26,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:37:26,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:37:26,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:37:26,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:37:26,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:37:26,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:37:26,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:37:26,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:37:26,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:37:26,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:37:26,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:37:26,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:37:26,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:37:26,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:37:26,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:37:26,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:37:26,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:37:26,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:37:26,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:37:26,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:37:26,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:37:26,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:37:26,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:37:26,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:37:26,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:37:26,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:37:26,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:37:26,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:37:26,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:37:26,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:37:26,644 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:38:20,628 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:38:20,965 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:38:20,965 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:38:20,965 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:38:20,965 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:38:20,965 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:38:20,965 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:38:20,966 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:38:20,966 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:38:20,966 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:38:20,966 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:38:20,966 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:38:20,966 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:38:20,966 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:38:20,966 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:38:20,967 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:38:20,967 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:38:20,967 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:38:20,967 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:38:20,967 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:38:20,967 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:38:20,967 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:38:20,967 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:38:20,968 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:38:20,968 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:38:20,968 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:38:20,968 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:38:20,968 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:38:20,968 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:38:20,968 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:38:20,968 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:38:20,969 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:38:20,969 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:38:20,969 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:38:20,969 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:38:20,969 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:38:20,969 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:38:20,969 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:39:09,238 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:39:09,575 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:39:09,575 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:39:09,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:39:09,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:39:09,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:39:09,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:39:09,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:39:09,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:39:09,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:39:09,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:39:09,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:39:09,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:39:09,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:39:09,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:39:09,578 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:39:09,578 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:39:09,578 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:39:09,578 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:39:09,578 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:39:09,578 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:39:09,578 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:39:09,578 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:39:09,579 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:39:09,579 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:39:09,579 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:39:09,579 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:39:09,579 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:39:09,579 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:39:09,579 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:39:09,579 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:39:09,580 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:39:09,580 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:39:09,580 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:39:09,580 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:39:09,580 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:39:09,580 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:39:09,580 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:40:33,278 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:40:33,640 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:40:33,640 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:40:33,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:40:33,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:40:33,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:40:33,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:40:33,641 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:40:33,641 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:40:33,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:40:33,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:40:33,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:40:33,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:40:33,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:40:33,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:40:33,642 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:40:33,642 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:40:33,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:40:33,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:40:33,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:40:33,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:40:33,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:40:33,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:40:33,643 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:40:33,643 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:40:33,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:40:33,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:40:33,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:40:33,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:40:33,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:40:33,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:40:33,644 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:40:33,644 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:40:33,645 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:40:33,645 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:40:33,645 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:40:33,645 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:40:33,645 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:40:38,022 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:40:38,354 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:40:38,354 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:40:38,355 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:40:38,355 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:40:38,355 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:40:38,355 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:40:38,355 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:40:38,355 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:40:38,356 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:40:38,356 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:40:38,356 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:40:38,356 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:40:38,356 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:40:38,356 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:40:38,356 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:40:38,356 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:40:38,357 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:40:38,357 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:40:38,357 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:40:38,357 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:40:38,357 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:40:38,357 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:40:38,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:40:38,358 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:40:38,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:40:38,358 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:40:38,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:40:38,358 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:40:38,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:40:38,358 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:40:38,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:40:38,359 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:40:38,359 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:40:38,359 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:40:38,359 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:40:38,359 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:40:38,359 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:40:47,242 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:40:47,573 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:40:47,573 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:40:47,573 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:40:47,573 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:40:47,574 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:40:47,574 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:40:47,574 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:40:47,574 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:40:47,574 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:40:47,574 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:40:47,574 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:40:47,574 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:40:47,575 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:40:47,575 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:40:47,575 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:40:47,575 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:40:47,575 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:40:47,575 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:40:47,575 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:40:47,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:40:47,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:40:47,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:40:47,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:40:47,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:40:47,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:40:47,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:40:47,576 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:40:47,576 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:40:47,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:40:47,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:40:47,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:40:47,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:40:47,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:40:47,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:40:47,577 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:40:47,577 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:40:47,577 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:42:29,782 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:42:30,112 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:42:30,112 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:42:30,113 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:42:30,113 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:42:30,113 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:42:30,113 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:42:30,113 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:42:30,113 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:42:30,114 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:42:30,114 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:42:30,114 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:42:30,114 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:42:30,114 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:42:30,114 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:42:30,114 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:42:30,114 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:42:30,115 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:42:30,115 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:42:30,115 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:42:30,115 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:42:30,115 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:42:30,115 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:42:30,115 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:42:30,116 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:42:30,116 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:42:30,116 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:42:30,116 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:42:30,116 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:42:30,116 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:42:30,116 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:42:30,116 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:42:30,116 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:42:30,117 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:42:30,117 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:42:30,117 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:42:30,117 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:42:30,117 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:42:50,434 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:42:50,717 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:42:50,717 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:42:50,717 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:42:50,717 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:42:50,718 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:42:50,718 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:42:50,718 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:42:50,718 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:42:50,718 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:42:50,718 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:42:50,719 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:42:50,719 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:42:50,719 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:42:50,719 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:42:50,719 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:42:50,719 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:42:50,720 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:42:50,720 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:42:50,720 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:42:50,720 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:42:50,720 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:42:50,720 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:42:50,721 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:42:50,721 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:42:50,721 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:42:50,721 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:42:50,721 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:42:50,721 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:42:50,722 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:42:50,722 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:42:50,722 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:42:50,722 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:42:50,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:42:50,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:42:50,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:42:50,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:42:50,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:42:50,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:42:50,724 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:42:50,724 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:42:50,724 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:42:50,724 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:42:50,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:42:50,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:42:50,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:42:50,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:42:50,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:42:50,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:42:50,726 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:42:50,726 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:42:50,726 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:42:50,726 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:42:50,727 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:42:50,727 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:42:50,727 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:42:50,727 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:42:50,727 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:42:50,728 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:42:50,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:42:50,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:42:50,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:42:50,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:42:50,729 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:42:50,729 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:42:50,729 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:42:50,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:42:50,730 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:42:50,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:42:50,730 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:42:50,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:42:50,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:42:50,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:42:50,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:42:50,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:42:50,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:42:50,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:42:50,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:42:50,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:42:50,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:42:50,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:42:50,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:42:50,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:42:50,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:42:50,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:42:50,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:42:50,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:42:50,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:42:50,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:42:50,734 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:42:50,734 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:42:50,734 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:42:50,734 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:42:50,734 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:42:50,734 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:42:50,735 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:47:27,309 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:47:27,672 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:47:27,672 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:47:27,673 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:47:27,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:47:27,673 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:47:27,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:47:27,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:47:27,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:47:27,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:47:27,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:47:27,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:47:27,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:47:27,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:47:27,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:47:27,675 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:47:27,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:47:27,675 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:47:27,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:47:27,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:47:27,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:47:27,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:47:27,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:47:27,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:47:27,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:47:27,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:47:27,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:47:27,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:47:27,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:47:27,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:47:27,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:47:27,678 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:47:27,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:47:27,678 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:47:27,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:47:27,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:47:27,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:47:27,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:47:27,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:47:27,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:47:27,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:47:27,680 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:47:27,680 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:47:27,680 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:47:27,680 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:47:27,680 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:47:27,680 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:47:27,681 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:47:27,681 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:47:27,681 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:47:27,681 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:47:27,681 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:47:27,681 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:47:27,682 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:47:27,682 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:47:27,682 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:47:27,682 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:47:27,682 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:47:27,682 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:47:27,683 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:47:27,683 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:47:27,683 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:47:27,683 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:47:27,684 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:47:27,684 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:47:27,684 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:47:27,684 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:47:27,685 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:47:27,685 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:47:27,685 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:47:27,685 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:47:27,685 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:47:27,685 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:47:27,686 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:47:27,686 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:47:27,686 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:47:27,686 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:47:27,687 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:47:27,687 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:47:27,687 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:47:27,687 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:47:27,688 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:47:27,688 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:47:27,688 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:47:27,688 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:47:27,688 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:47:27,688 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:47:27,689 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:47:27,689 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:47:27,689 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:47:27,689 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:47:27,689 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:47:27,690 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:47:27,690 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:47:27,690 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:47:27,690 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:47:39,560 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:47:39,899 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:47:39,899 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:47:39,900 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:47:39,900 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:47:39,900 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:47:39,900 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:47:39,901 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:47:39,901 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:47:39,901 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:47:39,901 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:47:39,902 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:47:39,902 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:47:39,902 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:47:39,902 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:47:39,903 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:47:39,903 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:47:39,903 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:47:39,903 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:47:39,904 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:47:39,904 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:47:39,904 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:47:39,904 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:47:39,904 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:47:39,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:47:39,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:47:39,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:47:39,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:47:39,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:47:39,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:47:39,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:47:39,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:47:39,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:47:39,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:47:39,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:47:39,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:47:39,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:47:39,908 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:55:06,601 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:55:07,016 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:55:07,016 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:55:07,017 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:55:07,017 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:55:07,017 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:55:07,017 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:55:07,017 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:55:07,018 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:55:07,018 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:55:07,018 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:55:07,018 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:55:07,018 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:55:07,018 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:55:07,018 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:55:07,019 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:55:07,019 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:55:07,019 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:55:07,019 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:55:07,019 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:55:07,019 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:55:07,020 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:55:07,020 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:55:07,020 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:55:07,020 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:55:07,020 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:55:07,020 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:55:07,021 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:55:07,021 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:55:07,021 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:55:07,021 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:55:07,021 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:55:07,021 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:55:07,022 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:55:07,022 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:55:07,022 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:55:07,022 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:55:07,023 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 15:56:02,285 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 15:56:02,667 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 15:56:02,667 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 15:56:02,668 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 15:56:02,668 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 15:56:02,668 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 15:56:02,668 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 15:56:02,668 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 15:56:02,668 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 15:56:02,669 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 15:56:02,669 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 15:56:02,669 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 15:56:02,669 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 15:56:02,669 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 15:56:02,669 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 15:56:02,669 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 15:56:02,669 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 15:56:02,670 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 15:56:02,670 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 15:56:02,670 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 15:56:02,670 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 15:56:02,670 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 15:56:02,670 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 15:56:02,671 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 15:56:02,671 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 15:56:02,671 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 15:56:02,671 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 15:56:02,671 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 15:56:02,671 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 15:56:02,671 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 15:56:02,671 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 15:56:02,672 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 15:56:02,672 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 15:56:02,672 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 15:56:02,672 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 15:56:02,672 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 15:56:02,672 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 15:56:02,672 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 15:56:02,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 15:56:02,673 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 15:56:02,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 15:56:02,673 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 15:56:02,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:56:02,673 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 15:56:02,673 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 15:56:02,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 15:56:02,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 15:56:02,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 15:56:02,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 15:56:02,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 15:56:02,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 15:56:02,674 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 15:56:02,674 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 15:56:02,675 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 15:56:02,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 15:56:02,675 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 15:56:02,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 15:56:02,675 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 15:56:02,675 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG重启和未修复数量计算评分测试开始==========
2025-03-27 15:56:02,675 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数0，期望20分===============
2025-03-27 15:56:02,675 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数0，期望20分 成功===============
2025-03-27 15:56:02,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数1，期望15分===============
2025-03-27 15:56:02,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数1，期望15分 成功===============
2025-03-27 15:56:02,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数2，期望10分===============
2025-03-27 15:56:02,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数2，期望10分 成功===============
2025-03-27 15:56:02,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数3，期望5分================
2025-03-27 15:56:02,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数3，期望5分 成功===============
2025-03-27 15:56:02,676 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数4，期望1分================
2025-03-27 15:56:02,676 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数4，期望1分 成功===============
2025-03-27 15:56:02,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数5，期望1分================
2025-03-27 15:56:02,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数5，期望1分 成功===============
2025-03-27 15:56:02,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG重启数9999，期望1分==============
2025-03-27 15:56:02,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG重启数9999，期望1分 成功==============
2025-03-27 15:56:02,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG重启数很长，期望1分===============
2025-03-27 15:56:02,677 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG重启数很长，期望1分 成功===============
2025-03-27 15:56:02,677 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数-1==================
2025-03-27 15:56:02,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：BUG重启数-1 成功=================
2025-03-27 15:56:02,678 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为浮点数=================
2025-03-27 15:56:02,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为浮点数 成功================
2025-03-27 15:56:02,678 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为小写英文================
2025-03-27 15:56:02,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为小写英文 成功================
2025-03-27 15:56:02,678 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为大写英文================
2025-03-27 15:56:02,678 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为大写英文 成功================
2025-03-27 15:56:02,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为汉字=================
2025-03-27 15:56:02,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为汉字 成功=================
2025-03-27 15:56:02,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为特殊符号================
2025-03-27 15:56:02,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为特殊符号 成功================
2025-03-27 15:56:02,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：BUG重启数为空格=================
2025-03-27 15:56:02,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ================执行用例：BUG重启数为空格 成功=================
2025-03-27 15:56:02,679 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为空字符串================
2025-03-27 15:56:02,679 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为空字符串 成功================
2025-03-27 15:56:02,680 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG重启数为null================
2025-03-27 15:56:02,680 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG重启数为null 成功================
2025-03-27 15:56:02,680 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：不传BUG重启数==================
2025-03-27 15:56:02,680 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：不传BUG重启数 成功=================
2025-03-27 15:56:02,680 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG重启和未修复数量计算评分测试结束==========
2025-03-27 21:31:24,566 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:31:24,965 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：不存在上线当天未修复BUG和创建当天未修复BUG==========
2025-03-27 21:31:24,965 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不存在上线当天未修复BUG和创建当天未修复BUG 失败，失败原因：calculate_bug_repair_rating() got an unexpected keyword argument 'deployProdDayUnrepaired'
2025-03-27 21:31:24,999 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:33:17,684 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:33:18,006 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：不存在上线当天未修复BUG和创建当天未修复BUG==========
2025-03-27 21:33:18,006 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不存在上线当天未修复BUG和创建当天未修复BUG 失败，失败原因：calculate_bug_repair_rating() got an unexpected keyword argument 'deployProdDayUnrepaired'
2025-03-27 21:33:18,040 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:34:21,706 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:34:22,005 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：不存在上线当天未修复BUG和创建当天未修复BUG==========
2025-03-27 21:34:22,005 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：不存在上线当天未修复BUG和创建当天未修复BUG 失败，失败原因：calculate_bug_repair_rating() got an unexpected keyword argument 'deployProdDayUnrepaired'
2025-03-27 21:34:22,043 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:35:11,967 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:35:12,303 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：不存在上线当天未修复BUG和创建当天未修复BUG==========
2025-03-27 21:35:12,303 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：不存在上线当天未修复BUG和创建当天未修复BUG 成功=========
2025-03-27 21:35:12,304 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:46:17,157 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:46:17,482 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 21:46:17,482 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 21:46:17,482 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 21:46:17,483 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 21:46:17,483 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:46:17,483 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 21:46:17,483 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:46:17,483 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 21:46:17,484 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =======开始执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG=======
2025-03-27 21:46:17,484 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ======执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG 成功=======
2025-03-27 21:46:17,484 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:49:13,059 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:49:13,389 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 21:49:13,389 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 21:49:13,389 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 21:49:13,390 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 21:49:13,390 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:49:13,390 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 21:49:13,390 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:49:13,390 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 21:49:13,390 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =======开始执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG=======
2025-03-27 21:49:13,391 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ======执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG 成功=======
2025-03-27 21:49:13,391 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，只存在多个P2级BUG，列表中数据为整数
2025-03-27 21:49:13,391 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，只存在多个P2级BUG，列表中数据为整数 成功
2025-03-27 21:49:13,391 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 21:51:36,990 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 21:51:37,306 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 21:51:37,306 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 21:51:37,306 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 21:51:37,306 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参中未传BUG等级字段，不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 21:51:37,307 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:51:37,307 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为空字典，不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 21:51:37,307 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 21:51:37,307 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：入参为null，不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 21:51:37,307 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =======开始执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG=======
2025-03-27 21:51:37,307 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ======执行用例：不传参数，不存在上线当天未修复BUG和创建当天未修复BUG 成功=======
2025-03-27 21:51:37,308 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，只存在多个P2级BUG====
2025-03-27 21:51:37,308 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，只存在多个P2级BUG 成功===
2025-03-27 21:51:37,308 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:27:46,492 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:27:46,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:27:46,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:27:46,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:27:46,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:27:46,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:27:46,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:27:46,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:27:46,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:27:46,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:27:46,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:27:46,908 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:27:46,908 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:27:46,908 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:27:46,908 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:27:46,908 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:27:46,908 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:27:46,908 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:27:46,908 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:27:46,909 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:27:46,909 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:27:46,909 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:27:46,909 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：
2025-03-27 22:27:46,944 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:27:46,944 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：
2025-03-27 22:27:46,945 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:27:46,945 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：
2025-03-27 22:27:46,947 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:27:46,947 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：
2025-03-27 22:27:46,948 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:27:46,948 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：
2025-03-27 22:27:46,949 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:27:46,949 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：
2025-03-27 22:27:46,951 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:27:46,951 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:27:46,951 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:27:46,951 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:27:46,951 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:27:46,951 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:27:46,951 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:27:46,951 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:27:46,952 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:27:46,952 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:27:46,952 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:27:46,952 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:27:46,952 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:27:46,952 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:27:46,953 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:27:46,953 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:27:46,953 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:27:46,953 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:27:46,953 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:28:20,729 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:28:21,018 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:28:21,019 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:28:21,019 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:28:21,019 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:28:21,020 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:28:21,020 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:28:21,020 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:28:21,020 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:28:21,021 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:28:21,021 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:28:21,021 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:28:21,021 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:28:21,022 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:28:21,022 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:28:21,022 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:28:21,022 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:28:21,023 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:28:21,023 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:28:21,023 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:28:21,023 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:28:21,024 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:28:21,024 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：
2025-03-27 22:28:21,066 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:28:21,066 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：
2025-03-27 22:28:21,068 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:28:21,068 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：
2025-03-27 22:28:21,070 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:28:21,070 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：
2025-03-27 22:28:21,073 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:28:21,073 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：
2025-03-27 22:28:21,076 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:28:21,076 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：
2025-03-27 22:28:21,078 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:21,079 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:21,079 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:21,079 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:21,080 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:28:21,080 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:28:21,081 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:28:21,081 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:28:21,082 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:21,082 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:21,082 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:21,082 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:21,083 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:28:21,083 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:28:21,083 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:28:21,083 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:28:21,084 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:28:21,084 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:28:21,084 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:28:32,527 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 22:28:32,807 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 22:28:32,807 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 22:28:32,807 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 22:28:32,808 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 22:28:32,808 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 22:28:32,808 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 22:28:32,808 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 22:28:32,808 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 22:28:32,809 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 22:28:32,809 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 22:28:32,809 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 22:28:32,809 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 22:28:32,809 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 22:28:32,810 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 22:28:32,810 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 22:28:32,810 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 22:28:32,811 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 22:28:32,811 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 22:28:32,811 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 22:28:32,811 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 22:28:32,812 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 22:28:32,812 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 22:28:32,812 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 22:28:32,812 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 22:28:32,813 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 22:28:32,813 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 22:28:32,813 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 22:28:32,813 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 22:28:32,813 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 22:28:32,813 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 22:28:32,814 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 22:28:32,814 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 22:28:32,814 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 22:28:32,814 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 22:28:32,815 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 22:28:32,815 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 22:28:32,815 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 22:28:32,815 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 22:28:32,815 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 22:28:32,816 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 22:28:32,816 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 22:28:32,816 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 22:28:32,816 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 22:28:32,816 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 22:28:32,817 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 22:28:32,817 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 22:28:32,817 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 22:28:32,818 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 22:28:32,818 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 22:28:32,818 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 22:28:32,818 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 22:28:32,818 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 22:28:32,819 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 22:28:32,819 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 22:28:32,819 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 22:28:32,819 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 22:28:32,819 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 22:28:32,820 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:28:32,820 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:28:32,820 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:28:32,820 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:28:32,820 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:28:32,821 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:28:32,821 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:28:32,821 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:28:32,821 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:28:32,821 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:28:32,821 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:28:32,822 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:28:32,822 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:28:32,822 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:28:32,822 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:28:32,823 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:28:32,823 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:28:32,823 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:28:32,823 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:28:32,823 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:28:32,824 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:28:32,824 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:28:32,824 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：
2025-03-27 22:28:32,860 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:28:32,860 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：
2025-03-27 22:28:32,862 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:28:32,862 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：
2025-03-27 22:28:32,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:28:32,863 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：
2025-03-27 22:28:32,865 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:28:32,865 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：
2025-03-27 22:28:32,867 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:28:32,867 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：
2025-03-27 22:28:32,870 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:32,870 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:32,870 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:32,870 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:32,871 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:28:32,871 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:28:32,871 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:28:32,871 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:28:32,871 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:32,872 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:32,872 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:28:32,872 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:28:32,872 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:28:32,872 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:28:32,873 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:28:32,873 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:28:32,873 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:28:32,873 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:28:32,873 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:33:10,860 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:33:11,152 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:33:11,152 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：
2025-03-27 22:33:11,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:33:11,188 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：
2025-03-27 22:33:11,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:33:11,190 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：
2025-03-27 22:33:11,192 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:33:11,192 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：
2025-03-27 22:33:11,194 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:33:11,194 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：
2025-03-27 22:33:11,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:33:11,197 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：
2025-03-27 22:33:11,198 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:35:30,022 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 22:35:30,357 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 22:35:30,357 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 22:35:30,358 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 22:35:30,358 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 22:35:30,359 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 22:35:30,359 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 22:35:30,360 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 22:35:30,360 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 22:35:30,360 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 22:35:30,360 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 22:35:30,361 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 22:35:30,361 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 22:35:30,362 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 22:35:30,362 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 22:35:30,362 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 22:35:30,362 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 22:35:30,363 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 22:35:30,363 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 22:35:30,363 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 22:35:30,363 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 22:35:30,364 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 22:35:30,364 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 22:35:30,364 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 22:35:30,364 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 22:35:30,365 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 22:35:30,365 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 22:35:30,365 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 22:35:30,366 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 22:35:30,366 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 22:35:30,366 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 22:35:30,367 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 22:35:30,367 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 22:35:30,367 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 22:35:30,367 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 22:35:30,368 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 22:35:30,368 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 22:35:30,368 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 22:35:30,368 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 22:35:30,369 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 22:35:30,369 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 22:35:30,370 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 22:35:30,370 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 22:35:30,370 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 22:35:30,370 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 22:35:30,370 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 22:35:30,371 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 22:35:30,371 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 22:35:30,371 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 22:35:30,372 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 22:35:30,372 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 22:35:30,372 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 22:35:30,372 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 22:35:30,373 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 22:35:30,373 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 22:35:30,373 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 22:35:30,373 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 22:35:30,373 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 22:35:30,374 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:35:30,374 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:35:30,374 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:35:30,374 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:35:30,374 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:35:30,375 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:35:30,375 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:35:30,375 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:35:30,375 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:35:30,376 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:35:30,376 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:35:30,376 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:35:30,376 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:35:30,377 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:35:30,377 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:35:30,377 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:35:30,377 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:35:30,378 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:35:30,378 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:35:30,378 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:35:30,378 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:35:30,379 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:35:30,379 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,443 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:35:30,443 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,464 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:35:30,464 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,511 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:35:30,511 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,531 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:35:30,531 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,552 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:35:30,553 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:35:30,602 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:35:30,602 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:35:30,602 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:35:30,602 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:35:30,603 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:35:30,603 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:35:30,603 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:35:30,603 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:35:30,603 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:35:30,603 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:35:30,604 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:35:30,604 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:35:30,604 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:35:30,604 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:35:30,605 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:35:30,605 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:35:30,605 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:35:30,605 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:35:30,606 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:36:09,322 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:36:09,712 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:36:09,712 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:36:09,713 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:36:09,713 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:36:09,713 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:36:09,713 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:36:09,714 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:36:09,714 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:36:09,714 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:36:09,714 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:36:09,714 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:36:09,714 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:36:09,715 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:36:09,715 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:36:09,715 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:36:09,715 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:36:09,715 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:36:09,715 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:36:09,715 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:36:09,715 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:36:09,716 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:36:09,716 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,769 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:36:09,769 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,786 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:36:09,786 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,827 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:36:09,827 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,845 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:36:09,845 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:36:09,863 ERROR [testlog] [base_case.py (base_exist_return_common_test:36] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 失败，失败原因：错误：缺陷修复评分计算失败，数据结构异常或存在未覆盖的逻辑分支
2025-03-27 22:36:09,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:36:09,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:36:09,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:36:09,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:36:09,905 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:36:09,905 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:36:09,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:36:09,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:36:09,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:36:09,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:36:09,906 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:36:09,906 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:36:09,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:36:09,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:36:09,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:36:09,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:36:09,907 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:36:09,907 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:36:09,907 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:51:33,877 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:51:34,317 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:51:34,317 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:51:34,317 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:51:34,317 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:51:34,318 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:51:34,318 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:51:34,318 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:51:34,318 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:51:34,318 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:51:34,318 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:51:34,319 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:51:34,319 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:51:34,319 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:51:34,319 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:51:34,319 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:51:34,319 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:51:34,320 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:51:34,320 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:51:34,320 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:51:34,320 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:51:34,320 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 22:51:34,320 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 22:51:34,320 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 22:51:34,320 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 22:51:34,321 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:51:34,321 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 22:51:34,321 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:51:34,321 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 22:51:34,321 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:51:34,321 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 22:51:34,321 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:51:34,322 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 22:51:34,322 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 22:51:34,322 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 22:51:34,322 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 22:51:34,322 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 22:51:34,322 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:51:34,322 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 22:51:34,323 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:51:34,323 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 22:51:34,323 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:51:34,323 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:51:34,323 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:51:34,323 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:51:34,323 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:51:34,323 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:51:34,324 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:51:34,324 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:51:34,324 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:51:34,324 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:51:34,324 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:51:34,324 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:51:34,324 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:51:34,324 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:51:34,325 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:51:34,325 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:51:34,325 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:51:34,325 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:51:34,325 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 22:59:08,160 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 22:59:08,496 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 22:59:08,496 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:59:08,496 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 22:59:08,496 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 22:59:08,497 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:59:08,497 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 22:59:08,497 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 22:59:08,497 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 22:59:08,497 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 22:59:08,497 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 22:59:08,498 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 22:59:08,498 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 22:59:08,498 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 22:59:08,498 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 22:59:08,498 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 22:59:08,498 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 22:59:08,499 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 22:59:08,499 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 22:59:08,499 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 22:59:08,499 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 22:59:08,499 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 22:59:08,499 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 22:59:08,500 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 22:59:08,500 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 22:59:08,500 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 22:59:08,500 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 22:59:08,500 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 22:59:08,500 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 22:59:08,500 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 22:59:08,501 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 22:59:08,501 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 22:59:08,501 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 22:59:08,501 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 22:59:08,501 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 22:59:08,501 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 22:59:08,501 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 22:59:08,502 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 22:59:08,502 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 22:59:08,502 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 22:59:08,502 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 22:59:08,502 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:59:08,502 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:59:08,502 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 22:59:08,502 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:59:08,503 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:59:08,503 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:59:08,503 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:59:08,503 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:59:08,503 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:59:08,503 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:59:08,504 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 22:59:08,504 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 22:59:08,504 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 22:59:08,504 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 22:59:08,504 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 22:59:08,504 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 22:59:08,504 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 22:59:08,504 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 22:59:08,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 22:59:08,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 22:59:08,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 22:59:08,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 22:59:08,505 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 22:59:08,505 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 22:59:08,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 22:59:08,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 22:59:08,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 22:59:08,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 22:59:08,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 22:59:08,506 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 22:59:08,506 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 22:59:08,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 22:59:08,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 22:59:08,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 22:59:08,507 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 22:59:08,507 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 22:59:08,508 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:15:32,491 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 23:15:32,847 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 23:15:32,848 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 23:15:32,848 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 23:15:32,848 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 23:15:32,849 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 23:15:32,849 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 23:15:32,849 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 23:15:32,849 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 23:15:32,849 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 23:15:32,849 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 23:15:32,850 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 23:15:32,850 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 23:15:32,850 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 23:15:32,850 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 23:15:32,850 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 23:15:32,850 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 23:15:32,850 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 23:15:32,850 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 23:15:32,851 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 23:15:32,851 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 23:15:32,851 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 23:15:32,851 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 23:15:32,851 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 23:15:32,851 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 23:15:32,852 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 23:15:32,852 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 23:15:32,852 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 23:15:32,852 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 23:15:32,852 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 23:15:32,852 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 23:15:32,852 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 23:15:32,852 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 23:15:32,853 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 23:15:32,853 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 23:15:32,853 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 23:15:32,853 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 23:15:32,853 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 23:15:32,853 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 23:15:32,854 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 23:15:32,854 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 23:15:32,854 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 23:15:32,854 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:15:32,854 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 23:15:32,854 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:15:32,854 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 23:15:32,854 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 23:15:32,855 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 23:15:32,855 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 23:15:32,856 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 23:15:32,856 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 23:15:32,856 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 23:15:32,856 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 23:15:32,856 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 23:15:32,856 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 23:15:32,856 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 23:15:32,856 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 23:15:32,856 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 23:15:32,857 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:15:32,857 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:15:32,857 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:15:32,857 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:15:32,857 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:15:32,857 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:15:32,857 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:15:32,858 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:15:32,858 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:15:32,858 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:15:32,858 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:15:32,858 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:15:32,858 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:15:32,858 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:15:32,858 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:15:32,859 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:15:32,859 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:15:32,859 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:15:32,859 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:15:32,859 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:15:32,859 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:15:32,859 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:15:32,860 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:15:32,860 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:15:32,860 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:15:32,860 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:15:32,860 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:15:32,860 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:15:32,860 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:15:32,861 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:15:32,861 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:15:32,861 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:15:32,861 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:15:32,861 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:15:32,861 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:15:32,861 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:15:32,861 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:15:32,862 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:15:32,862 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:15:32,862 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:15:32,862 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:15:32,862 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:15:32,862 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:15:32,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:15:32,863 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:15:32,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:15:32,863 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:15:32,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:15:32,863 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:15:32,863 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:15:32,863 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:15:32,864 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:15:32,864 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:15:32,864 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:15:32,864 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:15:32,864 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:15:32,864 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:15:32,865 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:15:32,865 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:15:32,865 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:15:32,865 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:15:32,865 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:15:32,865 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:15:32,865 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:15:32,865 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:15:32,866 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:15:32,866 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:15:32,866 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:15:32,866 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:15:32,866 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:15:32,866 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:15:32,867 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:15:32,867 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:15:32,867 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:15:32,867 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:15:32,867 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:15:32,867 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:15:32,867 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:16:01,220 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 23:16:05,263 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 23:16:05,550 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 23:16:05,550 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 23:16:05,551 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 23:16:05,551 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 23:16:05,551 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 23:16:05,551 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 23:16:05,552 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 23:16:05,552 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 23:16:05,552 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 23:16:05,552 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 23:16:05,552 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 23:16:05,552 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 23:16:05,553 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 23:16:05,553 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 23:16:05,553 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 23:16:05,553 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 23:16:05,553 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 23:16:05,553 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 23:16:05,553 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 23:16:05,553 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 23:16:05,554 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 23:16:05,554 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 23:16:05,554 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 23:16:05,554 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 23:16:05,554 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 23:16:05,554 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 23:16:05,555 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 23:16:05,555 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 23:16:05,555 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 23:16:05,555 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 23:16:05,555 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 23:16:05,555 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 23:16:05,556 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 23:16:05,556 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 23:16:05,556 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 23:16:05,556 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 23:16:05,556 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 23:16:05,556 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 23:16:05,557 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 23:16:05,557 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 23:16:05,557 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 23:16:05,557 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:05,558 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 23:16:05,558 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:05,558 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 23:16:05,558 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 23:16:05,558 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 23:16:05,558 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:05,559 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 23:16:05,559 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 23:16:05,559 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 23:16:05,559 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 23:16:05,559 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 23:16:05,559 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 23:16:05,559 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 23:16:05,559 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 23:16:05,560 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 23:16:05,560 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:16:05,560 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:16:05,560 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:16:05,560 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:16:05,560 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:16:05,560 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:16:05,560 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:16:05,561 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:16:05,561 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:16:05,561 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:16:05,561 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:16:05,561 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:16:05,561 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:16:05,562 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:16:05,562 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:16:05,562 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:16:05,562 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:16:05,562 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:16:05,562 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:16:05,562 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:16:05,562 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:16:05,563 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:16:05,563 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:16:05,563 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:16:05,563 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:16:05,563 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:16:05,563 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:16:05,564 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:16:05,564 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:16:05,564 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:16:05,564 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:16:05,564 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:16:05,564 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:16:05,564 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:16:05,564 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:16:05,565 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:16:05,565 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:16:05,565 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:16:05,565 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:16:05,565 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:16:05,565 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:16:05,566 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:05,566 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:05,566 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:05,566 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:05,566 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:16:05,566 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:16:05,567 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:16:05,567 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:16:05,567 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:05,567 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:05,567 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:05,567 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:05,567 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:16:05,567 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:16:05,568 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:16:05,568 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:16:05,568 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:16:05,568 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:16:05,568 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:16:05,568 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:16:05,569 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:16:05,569 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:16:05,569 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:16:05,569 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:16:05,569 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:16:05,569 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:16:05,569 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:16:05,569 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:16:05,570 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:16:05,570 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:16:05,570 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:16:05,570 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:16:05,570 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:16:05,570 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:16:05,571 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:16:05,571 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:16:05,571 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:16:52,898 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 23:16:53,185 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 23:16:53,185 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 23:16:53,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 23:16:53,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 23:16:53,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 23:16:53,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 23:16:53,186 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 23:16:53,186 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 23:16:53,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 23:16:53,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 23:16:53,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 23:16:53,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 23:16:53,187 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 23:16:53,187 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 23:16:53,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 23:16:53,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 23:16:53,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 23:16:53,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 23:16:53,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 23:16:53,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 23:16:53,188 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 23:16:53,188 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 23:16:53,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 23:16:53,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 23:16:53,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 23:16:53,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 23:16:53,189 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 23:16:53,189 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 23:16:53,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 23:16:53,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 23:16:53,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 23:16:53,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 23:16:53,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 23:16:53,190 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 23:16:53,190 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 23:16:53,191 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 23:16:53,191 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 23:16:53,191 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 23:16:53,192 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 23:16:53,192 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 23:16:53,192 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 23:16:53,192 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:53,192 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 23:16:53,192 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:53,193 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 23:16:53,193 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 23:16:53,193 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 23:16:53,193 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 23:16:53,193 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 23:16:53,193 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 23:16:53,193 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 23:16:53,193 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 23:16:53,194 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 23:16:53,194 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 23:16:53,194 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 23:16:53,194 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 23:16:53,194 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 23:16:53,194 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:16:53,194 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:16:53,194 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:16:53,195 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:16:53,195 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:16:53,195 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:16:53,195 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:16:53,195 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:16:53,195 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:16:53,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:16:53,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:16:53,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:16:53,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:16:53,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:16:53,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:16:53,196 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:16:53,196 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:16:53,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:16:53,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:16:53,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:16:53,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:16:53,197 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:16:53,197 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:16:53,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:16:53,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:16:53,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:16:53,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:16:53,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:16:53,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:16:53,198 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:16:53,198 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:16:53,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:16:53,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:16:53,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:16:53,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:16:53,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:16:53,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:16:53,199 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:16:53,199 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:16:53,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:16:53,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:16:53,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:53,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:53,200 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:53,200 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:53,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:16:53,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:16:53,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:16:53,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:16:53,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:53,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:53,201 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:16:53,201 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:16:53,202 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:16:53,202 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:16:53,202 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:16:53,202 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:16:53,202 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:16:53,202 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:16:53,203 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:16:53,203 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:16:53,203 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:16:53,203 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:16:53,203 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:16:53,203 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:16:53,203 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:16:53,203 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:16:53,204 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:16:53,204 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:16:53,204 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:16:53,204 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:16:53,204 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:16:53,204 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:16:53,205 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:16:53,205 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:16:53,205 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:16:53,205 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:16:53,205 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:18:06,403 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:18:06,720 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:18:06,721 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:18:06,721 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:18:06,721 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:18:06,722 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:18:06,722 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:18:06,722 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:18:06,722 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:18:06,722 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:18:06,722 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:18:06,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:18:06,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:18:06,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:18:06,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:18:06,723 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:18:06,723 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:18:06,724 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:18:06,724 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:18:06,724 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:18:06,724 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:18:06,724 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:18:06,724 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:18:06,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:18:06,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:18:06,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:18:06,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:18:06,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:18:06,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:18:06,725 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:18:06,725 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:18:06,726 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:18:06,726 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:18:06,726 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:18:06,726 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:18:06,726 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:18:06,726 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:18:06,727 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:18:06,727 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:18:06,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:18:06,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:18:06,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:06,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:06,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:06,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:06,728 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:18:06,728 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:18:06,729 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:18:06,729 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:18:06,729 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:06,729 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:06,729 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:06,729 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:06,730 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:18:06,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:18:06,730 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:18:06,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:18:06,730 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:18:06,730 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:18:06,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:18:06,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:18:06,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:18:06,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:18:06,731 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:18:06,731 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:18:06,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:18:06,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:18:06,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:18:06,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:18:06,732 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:18:06,732 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:18:06,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:18:06,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:18:06,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:18:06,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:18:06,733 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:18:06,733 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:18:06,733 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:18:16,056 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG密度计算BUG数评分测试开始==========
2025-03-27 23:18:16,332 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为0，期望20分===============
2025-03-27 23:18:16,332 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为0，期望20分 成功===============
2025-03-27 23:18:16,333 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.1，期望20分==============
2025-03-27 23:18:16,333 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.1，期望20分 成功==============
2025-03-27 23:18:16,333 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为0.9，期望20分==============
2025-03-27 23:18:16,333 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为0.9，期望20分 成功==============
2025-03-27 23:18:16,334 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为1，期望20分===============
2025-03-27 23:18:16,334 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为1，期望20分 成功===============
2025-03-27 23:18:16,334 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.1，期望15分==============
2025-03-27 23:18:16,334 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.1，期望15分 成功==============
2025-03-27 23:18:16,334 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.2，期望15分==============
2025-03-27 23:18:16,334 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.2，期望15分 成功==============
2025-03-27 23:18:16,334 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.4，期望15分==============
2025-03-27 23:18:16,335 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.4，期望15分 成功==============
2025-03-27 23:18:16,335 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.5，期望15分==============
2025-03-27 23:18:16,335 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.5，期望15分 成功==============
2025-03-27 23:18:16,335 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.6，期望10分==============
2025-03-27 23:18:16,335 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.6，期望10分 成功==============
2025-03-27 23:18:16,335 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.7，期望10分==============
2025-03-27 23:18:16,335 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.7，期望10分 成功==============
2025-03-27 23:18:16,336 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为1.9，期望10分==============
2025-03-27 23:18:16,336 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =============执行用例：BUG密度为1.9，期望10分 成功==============
2025-03-27 23:18:16,336 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为2，期望10分===============
2025-03-27 23:18:16,336 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2，期望10分 成功===============
2025-03-27 23:18:16,336 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.1，期望5分===============
2025-03-27 23:18:16,336 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.1，期望5分 成功==============
2025-03-27 23:18:16,336 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.2，期望5分===============
2025-03-27 23:18:16,337 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.2，期望5分 成功==============
2025-03-27 23:18:16,337 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为2.9，期望5分===============
2025-03-27 23:18:16,337 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为2.9，期望5分 成功==============
2025-03-27 23:18:16,337 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：BUG密度为3，期望5分================
2025-03-27 23:18:16,337 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为3，期望5分 成功===============
2025-03-27 23:18:16,337 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为3.1，期望1分===============
2025-03-27 23:18:16,337 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为3.1，期望1分 成功==============
2025-03-27 23:18:16,338 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==============开始执行用例：BUG密度为999，期望1分===============
2025-03-27 23:18:16,338 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：BUG密度为999，期望1分 成功==============
2025-03-27 23:18:16,338 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ================开始执行用例：BUG密度为很多小数点================
2025-03-27 23:18:16,338 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===============执行用例：BUG密度为很多小数点 成功================
2025-03-27 23:18:16,339 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为-1，输入值不在任何评分区间内===========
2025-03-27 23:18:16,339 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为-1，输入值不在任何评分区间内 成功===========
2025-03-27 23:18:16,339 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为小写英文，输入参数X必须是数字类型==========
2025-03-27 23:18:16,339 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为小写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:18:16,339 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为大写英文，输入参数X必须是数字类型==========
2025-03-27 23:18:16,339 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为大写英文，输入参数X必须是数字类型 成功==========
2025-03-27 23:18:16,340 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为汉字，输入参数X必须是数字类型===========
2025-03-27 23:18:16,340 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==========执行用例：BUG密度为汉字，输入参数X必须是数字类型 成功===========
2025-03-27 23:18:16,340 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==========开始执行用例：BUG密度为特殊符号，输入参数X必须是数字类型==========
2025-03-27 23:18:16,340 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为特殊符号，输入参数X必须是数字类型 成功==========
2025-03-27 23:18:16,340 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为空字符串，输入参数X不能为空============
2025-03-27 23:18:16,340 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为空字符串，输入参数X不能为空 成功===========
2025-03-27 23:18:16,340 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =========开始执行用例：BUG密度为字符串空格，输入参数X必须是数字类型==========
2025-03-27 23:18:16,340 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =========执行用例：BUG密度为字符串空格，输入参数X必须是数字类型 成功=========
2025-03-27 23:18:16,341 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===========开始执行用例：BUG密度为null，输入参数X不能为空============
2025-03-27 23:18:16,341 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===========执行用例：BUG密度为null，输入参数X不能为空 成功===========
2025-03-27 23:18:16,341 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===============开始执行用例：不传值，输入参数X不能为空===============
2025-03-27 23:18:16,341 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==============执行用例：不传值，输入参数X不能为空 成功===============
2025-03-27 23:18:16,341 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG密度计算BUG数评分测试结束==========
2025-03-27 23:18:16,341 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:18:16,341 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:18:16,341 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:18:16,342 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:18:16,342 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:18:16,342 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:18:16,342 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:18:16,342 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:18:16,342 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:18:16,342 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:18:16,342 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:18:16,343 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:18:16,343 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:18:16,343 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:18:16,343 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:18:16,343 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:18:16,343 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:18:16,344 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:18:16,344 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:18:16,344 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:18:16,344 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:18:16,344 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:18:16,344 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:18:16,344 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:18:16,344 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:18:16,345 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:18:16,345 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:18:16,345 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:18:16,345 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:18:16,345 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:18:16,345 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:18:16,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:18:16,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:18:16,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:18:16,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:18:16,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:18:16,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:18:16,346 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:18:16,346 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:18:16,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:18:16,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:18:16,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:16,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:16,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:16,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:16,347 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:18:16,347 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:18:16,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:18:16,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:18:16,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:16,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:16,348 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:18:16,348 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:18:16,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:18:16,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:18:16,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:18:16,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:18:16,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:18:16,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:18:16,349 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:18:16,349 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:18:16,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:18:16,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:18:16,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:18:16,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:18:16,350 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:18:16,350 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:18:16,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:18:16,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:18:16,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:18:16,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:18:16,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:18:16,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:18:16,351 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:18:16,351 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:18:16,352 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:18:16,352 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:18:16,352 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:24:37,678 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:24:38,083 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:24:38,083 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:24:38,084 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:24:38,084 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:24:38,084 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:24:38,085 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:24:38,085 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:24:38,085 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:24:38,085 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:24:38,085 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:24:38,086 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:24:38,086 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:24:38,086 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:24:38,086 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:24:38,086 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:24:38,086 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:24:38,087 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:24:38,087 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:24:38,087 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:24:38,087 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:24:38,087 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:24:38,087 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:24:38,087 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:24:38,087 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:24:38,088 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:24:38,088 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:24:38,088 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:24:38,088 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:24:38,088 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:24:38,088 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:24:38,089 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:24:38,089 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:24:38,089 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:24:38,089 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:24:38,089 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:24:38,089 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:24:38,089 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:24:38,090 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:24:38,090 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:24:38,090 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:24:38,091 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:24:38,091 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:24:38,091 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:24:38,091 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:24:38,091 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:24:38,091 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:24:38,092 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:24:38,092 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:24:38,092 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:24:38,092 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:24:38,092 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:24:38,092 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:24:38,093 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:24:38,093 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:24:38,093 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:24:38,093 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:24:38,093 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:24:38,093 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:24:38,093 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:24:38,094 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:24:38,094 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:24:38,094 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:24:38,094 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:24:38,094 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:24:38,094 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:24:38,094 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:24:38,095 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:24:38,095 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:24:38,095 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:24:38,095 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:24:38,095 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:24:38,095 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:24:38,096 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:24:38,096 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:24:38,096 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:24:38,096 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:24:38,096 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
2025-03-27 23:26:34,556 INFO [testlog] [base_case.py (setup_class:13] - ==========BUG修复情况评分计算测试开始==========
2025-03-27 23:26:34,933 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG====
2025-03-27 23:26:34,933 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ===执行用例：入参为完整的数据结构，不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:26:34,934 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==开始执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG==
2025-03-27 23:26:34,934 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =执行用例：入参中未传BUG等级字段，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功==
2025-03-27 23:26:34,935 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =====开始执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:26:34,935 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为空字典，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功=====
2025-03-27 23:26:34,936 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ====开始执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG=====
2025-03-27 23:26:34,936 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ====执行用例：入参为null，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功====
2025-03-27 23:26:34,937 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ======开始执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG======
2025-03-27 23:26:34,937 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =====执行用例：不传参数，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功======
2025-03-27 23:26:34,937 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ===开始执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG===
2025-03-27 23:26:34,937 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==执行用例：入参的数据格式不正确，代表不存在上线当天未修复BUG和创建当天未修复BUG 成功===
2025-03-27 23:26:34,938 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG
2025-03-27 23:26:34,938 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P2级BUG 成功
2025-03-27 23:26:34,939 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG
2025-03-27 23:26:34,939 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P2列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P2级BUG 成功
2025-03-27 23:26:34,940 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG
2025-03-27 23:26:34,940 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P1级BUG 成功
2025-03-27 23:26:34,940 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG
2025-03-27 23:26:34,941 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P1级BUG 成功
2025-03-27 23:26:34,941 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG
2025-03-27 23:26:34,941 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P1级和P2级BUG 成功
2025-03-27 23:26:34,942 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG
2025-03-27 23:26:34,942 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG各存在一个P1级和P2级BUG 成功
2025-03-27 23:26:34,942 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG
2025-03-27 23:26:34,942 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG只存在多个P0级BUG 成功
2025-03-27 23:26:34,943 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG
2025-03-27 23:26:34,943 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0列表数据，不存在上线当天未修复BUG，创建当天未修复BUG只存在一个P0级BUG 成功
2025-03-27 23:26:34,944 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG
2025-03-27 23:26:34,944 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P1级BUG 成功
2025-03-27 23:26:34,944 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG
2025-03-27 23:26:34,944 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P1级BUG 成功
2025-03-27 23:26:34,945 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG
2025-03-27 23:26:34,945 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级和P2级BUG 成功
2025-03-27 23:26:34,946 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG
2025-03-27 23:26:34,946 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的P0和P1列表数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级和一个P2级BUG 成功
2025-03-27 23:26:34,947 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG
2025-03-27 23:26:34,947 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，不存在上线当天未修复BUG，创建当天未修复BUG存在多个P0级、P1级和P2级BUG 成功
2025-03-27 23:26:34,947 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG
2025-03-27 23:26:34,947 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在创建当天未修复BUG的完整数据，不存在上线当天未修复BUG，创建当天未修复BUG存在一个P0级、一个P1级和一个P2级BUG 成功
2025-03-27 23:26:34,948 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:26:34,948 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:26:34,949 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG
2025-03-27 23:26:34,949 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P2列表数据，上线当天未修复BUG只存在一个P2级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:26:34,949 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:26:34,949 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P2级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:26:34,950 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:26:34,950 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P2列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P2级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:26:34,951 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:26:34,951 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:26:34,952 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG
2025-03-27 23:26:34,952 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参只存在上线当天未修复BUG的P0P1列表数据，上线当天未修复BUG只存在一个P0P1级BUG，不存在创建当天未修复BUG 成功
2025-03-27 23:26:34,953 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG
2025-03-27 23:26:34,953 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG只存在多个P0P1级BUG，创建当天未修复BUG所有等级都存在多个BUG 成功
2025-03-27 23:26:34,953 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG
2025-03-27 23:26:34,953 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参存在上线当天未修复BUG的P0P1列表数据和创建当天未修复BUG的完整数据，上线当天未修复BUG只存在一个P0P1级BUG，创建当天未修复BUG所有等级都各存在一个BUG 成功
2025-03-27 23:26:34,954 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - 开始执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG
2025-03-27 23:26:34,954 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - 执行用例：入参为完整的数据结构，上线当天未修复BUG和创建当天未修复BUG的所有等级都各存在一个BUG 成功
2025-03-27 23:26:34,955 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为小写英文==================
2025-03-27 23:26:34,955 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为小写英文 成功=================
2025-03-27 23:26:34,955 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为大写英文==================
2025-03-27 23:26:34,955 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为大写英文 成功=================
2025-03-27 23:26:34,956 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为整数===================
2025-03-27 23:26:34,956 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为整数 成功==================
2025-03-27 23:26:34,957 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为浮点数==================
2025-03-27 23:26:34,957 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为浮点数 成功==================
2025-03-27 23:26:34,957 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为汉字===================
2025-03-27 23:26:34,957 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为汉字 成功==================
2025-03-27 23:26:34,958 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为特殊符号==================
2025-03-27 23:26:34,958 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为特殊符号 成功=================
2025-03-27 23:26:34,959 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - =================开始执行用例：入参值为空字符串==================
2025-03-27 23:26:34,959 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空字符串 成功=================
2025-03-27 23:26:34,959 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空格===================
2025-03-27 23:26:34,959 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - ==================执行用例：入参值为空格 成功==================
2025-03-27 23:26:34,960 INFO [testlog] [base_case.py (base_exist_return_common_test:23] - ==================开始执行用例：入参值为空列表==================
2025-03-27 23:26:34,960 DEBUG [testlog] [base_case.py (base_exist_return_common_test:38] - =================执行用例：入参值为空列表 成功==================
2025-03-27 23:26:34,960 INFO [testlog] [base_case.py (teardown_class:17] - ==========BUG修复情况评分计算测试结束==========
